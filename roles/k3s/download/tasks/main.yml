---
- name: Determine latest K3s version in channel {{ k3s_release_channel }}
  uri:
    url: "{{ k3s_release_channel_url }}/{{ k3s_release_channel }}"
    follow_redirects: safe
    # Ignore any cached results
    force: true
    return_content: false
  register: uri_k3s_release_channel_url
  when: k3s_version == ''
  check_mode: no

- set_fact:
    effective_k3s_version: "{{ uri_k3s_release_channel_url.url.split('/')[-1] }}"
  when: uri_k3s_release_channel_url is not skipped

- set_fact:
    effective_k3s_version: "{{ k3s_version }}"
  when: uri_k3s_release_channel_url is skipped

- debug:
    var: effective_k3s_version

- name: Check if k3s binary is present
  stat:
    path: /usr/local/bin/k3s
  register: stat_k3s_bin
  check_mode: no

- name: K3s version check
  command: /usr/local/bin/k3s --version
  register: command_ks3_version
  changed_when: false
  when: stat_k3s_bin.stat.exists
  check_mode: no

- set_fact:
    k3s_binary_changed: false

- block:
    - set_fact:
        k3s_binary_changed: true
        k3s_bin_download_path: "/usr/local/bin/k3s.{{ effective_k3s_version }}"

    - name: Download k3s binary x64
      get_url:
        url: "{{ k3s_download_url }}/{{ effective_k3s_version }}/k3s"
        checksum: sha256:{{ k3s_download_url }}/{{ effective_k3s_version }}/sha256sum-amd64.txt
        dest: "{{ k3s_bin_download_path }}"
        owner: root
        group: root
        mode: 0755
      when:
        - ansible_facts.architecture == "x86_64"

    - name: Download k3s binary arm64
      get_url:
        url: "{{ k3s_download_url }}/{{ effective_k3s_version }}/k3s-arm64"
        checksum: sha256:{{ k3s_download_url }}/{{ effective_k3s_version }}/sha256sum-arm64.txt
        dest: "{{ k3s_bin_download_path }}"
        owner: root
        group: root
        mode: 0755
      when:
        - ( ansible_facts.architecture is search("arm") and
            ansible_facts.userspace_bits == "64" ) or
          ansible_facts.architecture is search("aarch64")

    - name: Download k3s binary armhf
      get_url:
        url: "{{ k3s_download_url }}/{{ effective_k3s_version }}/k3s-armhf"
        checksum: sha256:{{ k3s_download_url }}/{{ effective_k3s_version }}/sha256sum-arm.txt
        dest: "{{ k3s_bin_download_path }}"
        owner: root
        group: root
        mode: 0755
      when:
        - ansible_facts.architecture is search("arm")
        - ansible_facts.userspace_bits == "32"
  rescue:
    - name: Remove downloaded k3s binary (if any)
      file:
        path: "{{ k3s_bin_download_path }}"
        state: absent
      ignore_errors: true

    - name: Bail out if the download failed for some reason
      fail:
        msg: Download of k3s binary failed
  when:
   - not stat_k3s_bin.stat.exists or (command_ks3_version.stdout is defined and (command_ks3_version.stdout.find(effective_k3s_version) == -1))
