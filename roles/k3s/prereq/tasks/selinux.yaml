---
- fail:
    msg: "k3s_selinux_enable must be a boolean value."
  when:
    - k3s_selinux_enable is defined
    - k3s_selinux_enable | type_debug != "bool"

# This assumes that the run-time state matches the user's intent.
- name: Determine SELinux state
  command: getenforce
  register: determine_selinux_state
  check_mode: false
  changed_when: false

- name: Effective SELinux state mirrors system SELinux state
  set_fact:
    effective_selinux_state: "{{ determine_selinux_state.stdout | lower }}"
  when: selinux_state is not defined or selinux_state == ""

- name: Effective SELinux state set by configuration
  set_fact:
    effective_selinux_state: "{{ selinux_state }}"
  when: selinux_state is defined and selinux_state != ""

- name: Enabling K3s SELinux support
  set_fact:
    k3s_selinux_enable: true
  when:
    - k3s_selinux_enable is not defined
    - effective_selinux_state in ["permissive", "enforcing"]

- name: Disabling K3s SELinux support
  set_fact:
    k3s_selinux_enable: false
  when:
    - k3s_selinux_enable is not defined
    - effective_selinux_state == "disabled"

- debug:
    msg: >-
      System SELinux state: {{ determine_selinux_state.stdout | lower }},
      target SELinux state: {{ effective_selinux_state }},
      K3s SELinux support enabled: {{ k3s_selinux_enable }}.

- fail:
    msg: K3s SELinux support must be enabled if target SELinux state is {{ effective_selinux_state }}.
  when:
    - not k3s_selinux_enable
    - effective_selinux_state in ["permissive", "enforcing"]

- fail:
    msg: K3s SELinux support must be disabled if target SELinux state is {{ effective_selinux_state }}.
  when:
    - k3s_selinux_enable
    - effective_selinux_state == "disabled"

- block:
    - block:
        - name: Install yum-utils for yum-config-manager
          yum:
            name: yum-utils
            state: installed

        - name: Enable rhel-7-server-extras-rpms repo
          command: yum-config-manager --enable rhel-7-server-extras-rpms
      when: ansible_distribution in ['Red Hat Enterprise Linux'] and ansible_distribution_major_version == '7'

    - name: Create /etc/yum.repos.d/rancher-k3s-common.repo
      copy:
        content: |
          [rancher-k3s-common-{{ rancher_rpm_channel }}]
          name=Rancher K3s Common ({{ rancher_rpm_channel }})
          baseurl=https://{{ rancher_rpm_site }}/k3s/{{ rancher_rpm_channel }}/common/centos/{{ ansible_distribution_major_version }}/noarch
          enabled=1
          gpgcheck=1
          gpgkey=https://{{ rancher_rpm_site }}/public.key
        dest: /etc/yum.repos.d/rancher-k3s-common.repo
        mode: "u=rw,g=r,o=r"

    - name: Install K3s SELinux related packages
      yum:
        name:
          - container-selinux
          - selinux-policy-base
        state: installed

    # Has to be a separate yum call from the above, otherwise yum's conflict resolution won't succeed
    - name: Install k3s-selinux package
      yum:
        name: k3s-selinux
        # k3s-selinux package might need older version of container-selinux.
        allow_downgrade: true
        state: installed
      # If the Rancher repo isn't present yet, this would fail in check mode.
      when: not ansible_check_mode
  when:
    - k3s_selinux_enable
    - ansible_os_family in ['RedHat']

- name: Set SELinux state
  register: set_selinux_state
  selinux:
    policy: "targeted"
    state: "{{ effective_selinux_state }}"

- fail:
    msg: "Please reboot system to complete SELinux configuration before continuing."
  when: set_selinux_state.reboot_required
