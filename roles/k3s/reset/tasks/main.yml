---

- name: Disable control plane HA services
  block:
    - name: Stop and disable keepalived service
      systemd:
        name: keepalived
        state: stopped
        enabled: no
      failed_when: false
      # This will unfortunately hide the fact that this task would stop and disable the keepalived service if it is
      # running.
      when: not ansible_check_mode

    - name: Remove keepalived package
      package:
        name: keepalived
        state: absent

    - name: Remove keepalived configuration
      file:
        name: "{{ item }}"
        state: absent
      loop:
        - /etc/keepalived/check_k3s.sh
        - /etc/keepalived/keepalived.conf
        - /etc/keepalived
  when:
    - keepalived_enabled  # also want to be sure this is the desired configuration

- name: Disable services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  failed_when: false
  with_items:
    - k3s
    - k3s-agent
    - k3s-init
  # This will unfortunately hide the fact that this task would stop and disable the service in question if it is
  # running.
  when: not ansible_check_mode

- name: pkill -9 -f "k3s/data/[^/]+/bin/containerd-shim-runc"
  register: pkill_containerd_shim_runc
  command: pkill -9 -f "k3s/data/[^/]+/bin/containerd-shim-runc"
  changed_when: "pkill_containerd_shim_runc.rc == 0"
  failed_when: false

- name: Umount k3s filesystems
  include_tasks: umount_with_children.yml
  with_items:
    - /run/k3s
    - /var/lib/rancher/k3s
    - /var/lib/kubelet/pods
    - /var/lib/kubelet/plugins
    - /run/netns/cni-
  loop_control:
    loop_var: mounted_fs

- name: List network namespaces
  register: ip_netns_show
  command: ip netns show
  changed_when: false

# While this is part of the original install.sh it is unclear to me why this
# is necessary because unmounting and removing all files below /run/netns
# should delete the namespace already.
- name: Remove network namespaces with cni- prefix
  register: ip_netns_delete
  command: ip netns delete {{ item }}
  loop: "{{ ip_netns_show.stdout_lines | map('regex_search', '^\\S+') | select('match', '^cni-') | list }}"
  changed_when: ip_netns_delete is success

- name: Remove network interfaces related to K3s
  register: ip_link_delete
  command: ip link delete {{ item }}
  with_items:
    - cni0
    - flannel.1
    - flannel-v6.1
    - kube-ipvs0
    - flannel-wg
    - flannel-wg-v6
  changed_when: ip_link_delete is success
  failed_when: false

- name: Remove service files, binaries and data
  file:
    name: "{{ item }}"
    state: absent
  with_items:
    - /usr/local/bin/k3s
    - /usr/local/bin/crictl
    - /usr/local/bin/ctr
    - /usr/local/bin/kubectl
    - "{{ systemd_dir }}/k3s.service"
    - "{{ systemd_dir }}/k3s-agent.service"
    - "{{ systemd_dir }}/k3s.service.env"
    - "{{ systemd_dir }}/k3s-agent.service.env"
    - /etc/rancher/k3s
    - /var/lib/kubelet
    - /var/lib/rancher/k3s
    - /var/lib/cni
    - /run/flannel
    - /run/k3s
    - /etc/yum.repos.d/rancher-k3s-common.repo
    - /etc/rancher/node/password
    
- name: Remove realtime related files
  file:
    name: "{{ item }}"
    state: absent
  with_items:
    - /etc/systemd/system/k3s.service.d/rt-override.conf
    - /etc/systemd/system/keepalived.service.d/rt-override.conf
    - /etc/sysctl.d/sched_rt.conf
  when: rt_enabled

- name: Remove k3s-selinux package
  yum:
    name: k3s-selinux
    state: absent

- name: Reload systemd configuration
  systemd:
    daemon_reload: yes

- name: Remove ~{{ ansible_user }}/.kube directory
  file:
    path: "~{{ ansible_user }}/.kube"
    state: absent
  when: inventory_hostname in groups['server']
